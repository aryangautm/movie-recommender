"""add additional_keywords visibility

Revision ID: 9aa279ea4365
Revises: 87616f7d1a60
Create Date: 2025-08-04 23:37:24.950051

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9aa279ea4365"
down_revision: Union[str, Sequence[str], None] = "87616f7d1a60"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    movie_visibility = postgresql.ENUM("PUBLIC", "PRIVATE", name="movievisibility")
    movie_visibility.create(op.get_bind())
    op.add_column(
        "movies",
        sa.Column(
            "visibility", movie_visibility, server_default="PUBLIC", nullable=False
        ),
    )
    op.add_column(
        "movies",
        sa.Column(
            "additional_keywords",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
    )
    op.create_index(
        op.f("ix_movies_visibility"), "movies", ["visibility"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_movies_visibility"), table_name="movies")
    op.drop_column("movies", "additional_keywords")
    op.drop_column("movies", "visibility")
    movie_visibility = postgresql.ENUM("PUBLIC", "PRIVATE", name="movievisibility")
    movie_visibility.drop(op.get_bind())
    # ### end Alembic commands ###
